{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10861353,"sourceType":"datasetVersion","datasetId":6747168}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"name":"GAT MODEL","provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/gat-model-58d79e97-4458-437d-bdde-ff055ea9d7cd.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250226/auto/storage/goog4_request&X-Goog-Date=20250226T144005Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=4ef7cd844c8090faa4a419c000fc1d78c0f4a0966d43f64e8ee15f63065ac46535c9efdb606653c127afb78e27f59378152076e5888f5ee097fdcf98abd366f134b87556f58ec7cce0d99d645763199442610a8c81c48121615d5ad15ad1e7c70918809af382a1202fbf7dfb4ad95cf8d2156eb566c9fd0bd4958e91b180c0ba31c0483e5c4dca5231845f2cdf2dbb018a5773370809c0775ad2c31edb73f3b6c5e19fd2889128f469d328773a9c417b86b11af98866ffbed007bac01b7f8062a13366aa53de1dc4f36ce51f29b9ac7f004f6e24b9b61dcc4a62c8627f2c2697368e4c792ac00e6e574b31b57edb3dccc9afbc00eaadd394cdcbb18ca214ee8c","timestamp":1740581861899}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["\n"],"metadata":{"id":"mwUV2NgSs1vp"},"cell_type":"code","outputs":[],"execution_count":null},{"cell_type":"code","source":[],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-26T14:16:19.899419Z","iopub.status.idle":"2025-02-26T14:16:19.899769Z","shell.execute_reply":"2025-02-26T14:16:19.899626Z"},"id":"2y7aK8gIs1vs"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# Install necessary libraries if needed\n","!pip install torch torch_geometric\n","import torch\n","import torch.nn.functional as F\n","from torch_geometric.nn import GATConv\n","from torch_geometric.data import Data\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, f1_score\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neighbors import NearestNeighbors\n","import matplotlib.pyplot as plt\n","\n","# Load dataset\n","data_path = \"/kaggle/input/di-data/divorce.xlsx\"  # Adjust based on !ls output\n","df = pd.read_excel(data_path, engine=\"openpyxl\")\n","\n","# Use all columns except the last one as features\n","features = df.columns[:-1]  # All columns except the last one\n","X = df[features].values\n","y = df[\"Class\"].values  # Assuming \"Class\" is the target column\n","\n","# Normalize features\n","scaler = StandardScaler()\n","X = scaler.fit_transform(X)\n","\n","# Split dataset into train, validation, and test sets\n","X_train, X_temp, y_train, y_temp = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)\n","X_val, X_test, y_val, y_test = train_test_split(X_temp, y_temp, test_size=0.5, random_state=42, stratify=y_temp)\n","\n","# Convert data to tensors\n","x_train_tensor = torch.tensor(X_train, dtype=torch.float)\n","y_train_tensor = torch.tensor(y_train, dtype=torch.long)\n","x_val_tensor = torch.tensor(X_val, dtype=torch.float)\n","y_val_tensor = torch.tensor(y_val, dtype=torch.long)\n","x_test_tensor = torch.tensor(X_test, dtype=torch.float)\n","y_test_tensor = torch.tensor(y_test, dtype=torch.long)\n","\n","# --------------------------\n","# 2. Create a Sparse Graph using k-NN for Training Data\n","# --------------------------\n","k = 5  # Number of neighbors; adjust as needed\n","nbrs = NearestNeighbors(n_neighbors=k, algorithm='ball_tree').fit(X_train)\n","distances, indices = nbrs.kneighbors(X_train)\n","\n","edge_index_list = []\n","num_nodes = x_train_tensor.size(0)\n","for i in range(num_nodes):\n","    for j in indices[i]:\n","        if i != j:\n","            edge_index_list.append([i, j])\n","edge_index = torch.tensor(edge_index_list, dtype=torch.long).t().contiguous()\n","\n","train_data = Data(x=x_train_tensor, edge_index=edge_index, y=y_train_tensor)\n","\n","# --------------------------\n","# 3. Define the GAT Model\n","# --------------------------\n","class GATModel(torch.nn.Module):\n","    def __init__(self, in_channels, hidden_channels, out_channels, heads=4, dropout=0.6):\n","        super(GATModel, self).__init__()\n","        self.gat1 = GATConv(in_channels, hidden_channels, heads=heads, dropout=dropout)\n","        self.gat2 = GATConv(hidden_channels * heads, out_channels, heads=1, concat=False, dropout=dropout)\n","        self.dropout = dropout\n","\n","    def forward(self, data):\n","        x, edge_index = data.x, data.edge_index\n","        x = F.dropout(x, p=self.dropout, training=self.training)\n","        x = self.gat1(x, edge_index)\n","        x = F.elu(x)\n","        x = F.dropout(x, p=self.dropout, training=self.training)\n","        x = self.gat2(x, edge_index)\n","        return x\n","\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","model = GATModel(in_channels=len(features), hidden_channels=32, out_channels=2).to(device)\n","train_data = train_data.to(device)\n","\n","# --------------------------\n","# 4. Training Setup\n","# --------------------------\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.005, weight_decay=5e-4)\n","criterion = torch.nn.CrossEntropyLoss()\n","\n","def train():\n","    model.train()\n","    optimizer.zero_grad()\n","    out = model(train_data)  # Shape: [num_nodes, 2]\n","    loss = criterion(out, train_data.y)\n","    loss.backward()\n","    optimizer.step()\n","    return loss.item()\n","\n","# --------------------------\n","# 5. Evaluation Functions (using k-NN Graph for Eval Data)\n","# --------------------------\n","def build_knn_graph(x_tensor, k=5):\n","    x_np = x_tensor.cpu().numpy()\n","    nbrs = NearestNeighbors(n_neighbors=k, algorithm='ball_tree').fit(x_np)\n","    distances, indices = nbrs.kneighbors(x_np)\n","    edge_index_list = []\n","    num_nodes = x_tensor.size(0)\n","    for i in range(num_nodes):\n","        for j in indices[i]:\n","            if i != j:\n","                edge_index_list.append([i, j])\n","    edge_index = torch.tensor(edge_index_list, dtype=torch.long).t().contiguous()\n","    return edge_index\n","\n","def evaluate(x_tensor, y_true_tensor, k=5):\n","    edge_index_eval = build_knn_graph(x_tensor, k=k)\n","    data_eval = Data(x=x_tensor, edge_index=edge_index_eval)\n","    data_eval = data_eval.to(device)\n","    model.eval()\n","    with torch.no_grad():\n","        out = model(data_eval)\n","        preds = out.argmax(dim=1).cpu().numpy()\n","        y_true = y_true_tensor.cpu().numpy()\n","    return preds, y_true\n","\n","# --------------------------\n","# 6. Train the Model and Collect Metrics\n","# --------------------------\n","epochs = 100\n","train_acc_list = []\n","val_acc_list = []\n","loss_list = []\n","epoch_list = []\n","\n","for epoch in range(epochs):\n","    loss = train()\n","    loss_list.append(loss)\n","\n","    # Evaluate every 10 epochs\n","    if (epoch + 1) % 10 == 0:\n","        train_preds, train_true = evaluate(x_train_tensor, y_train_tensor, k=k)\n","        train_acc = accuracy_score(train_true, train_preds)\n","\n","        val_preds, val_true = evaluate(x_val_tensor, y_val_tensor, k=k)\n","        val_acc = accuracy_score(val_true, val_preds)\n","\n","        train_acc_list.append(train_acc)\n","        val_acc_list.append(val_acc)\n","        epoch_list.append(epoch + 1)\n","\n","        train_f1 = f1_score(train_true, train_preds, average='weighted')\n","        val_f1 = f1_score(val_true, val_preds, average='weighted')\n","\n","        print(f\"Epoch {epoch+1:03d}, Loss: {loss:.4f}\")\n","        print(f\"  Train Acc: {train_acc:.4f}, F1: {train_f1:.4f}\")\n","        print(f\"  Val   Acc: {val_acc:.4f}, F1: {val_f1:.4f}\")\n","\n","# --------------------------\n","# 7. Final Evaluation on Test Data\n","# --------------------------\n","test_preds, test_true = evaluate(x_test_tensor, y_test_tensor, k=k)\n","test_acc = accuracy_score(test_true, test_preds)\n","test_f1 = f1_score(test_true, test_preds, average='weighted')\n","print(\"\\nFinal Test Metrics:\")\n","print(f\"Test Accuracy: {test_acc:.4f}\")\n","print(f\"Test F1 Score: {test_f1:.4f}\")\n","\n","# --------------------------\n","# 8. Plot the Training/Validation Accuracy and Loss Curves\n","# --------------------------\n","fig, ax1 = plt.subplots(figsize=(10, 6))\n","\n","color = 'tab:blue'\n","ax1.set_xlabel('Epoch')\n","ax1.set_ylabel('Accuracy', color=color)\n","ax1.plot(epoch_list, train_acc_list, marker='o', label='Train Accuracy', color='tab:blue')\n","ax1.plot(epoch_list, val_acc_list, marker='s', label='Validation Accuracy', color='tab:cyan')\n","ax1.tick_params(axis='y', labelcolor=color)\n","ax1.legend(loc='upper left')\n","ax1.grid(True)\n","\n","ax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis\n","color = 'tab:red'\n","ax2.set_ylabel('Loss', color=color)  # we already handled the x-label with ax1\n","ax2.plot(range(1, epochs+1), loss_list, label='Training Loss', color=color, alpha=0.6)\n","ax2.tick_params(axis='y', labelcolor=color)\n","ax2.legend(loc='upper right')\n","\n","plt.title('Training/Validation Accuracy and Training Loss over Epochs')\n","plt.show()"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-26T14:39:09.416259Z","iopub.execute_input":"2025-02-26T14:39:09.416757Z","iopub.status.idle":"2025-02-26T14:39:15.820658Z","shell.execute_reply.started":"2025-02-26T14:39:09.416711Z","shell.execute_reply":"2025-02-26T14:39:15.818768Z"},"id":"YI_Pt47gs1vu","outputId":"45bf4066-2632-4db6-fe4a-4d0bf6cb95fc"},"outputs":[{"name":"stdout","text":"Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.5.1+cu121)\nRequirement already satisfied: torch_geometric in /usr/local/lib/python3.10/dist-packages (2.6.1)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.17.0)\nRequirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.12.2)\nRequirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.4.2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2024.12.0)\nRequirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch) (1.13.1)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch) (1.3.0)\nRequirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.11.12)\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.26.4)\nRequirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (5.9.5)\nRequirement already satisfied: pyparsing in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.2.0)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (2.32.3)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (4.67.1)\nRequirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (2.4.6)\nRequirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.3.2)\nRequirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (5.0.1)\nRequirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (25.1.0)\nRequirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.5.0)\nRequirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (6.1.0)\nRequirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (0.2.1)\nRequirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.18.3)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (3.0.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy->torch_geometric) (2.4.1)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.4.1)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2.3.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2025.1.31)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy->torch_geometric) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy->torch_geometric) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy->torch_geometric) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy->torch_geometric) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy->torch_geometric) (2024.2.0)\nEpoch 010, Loss: 0.5752\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 020, Loss: 0.2332\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 030, Loss: 0.2646\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 040, Loss: 0.1421\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 050, Loss: 0.1750\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 060, Loss: 0.1646\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 070, Loss: 0.1580\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 080, Loss: 0.2239\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 090, Loss: 0.1740\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\nEpoch 100, Loss: 0.1967\n  Train Acc: 0.9832, F1: 0.9832\n  Val   Acc: 1.0000, F1: 1.0000\n\nFinal Test Metrics:\nTest Accuracy: 0.9231\nTest F1 Score: 0.9226\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":null}]}