{"cells":[{"cell_type":"markdown","metadata":{"id":"DXgNsJAj6mhz"},"source":["import dependencies"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":124014,"status":"ok","timestamp":1740647747581,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"},"user_tz":-180},"id":"4wNNl27Q0Lxi","outputId":"3afc151f-9337-4015-cdec-ff008abbd5f6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (2.5.1+cu124)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch) (3.17.0)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.11/dist-packages (from torch) (4.12.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch) (3.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch) (3.1.5)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch) (2024.10.0)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.1.0 in /usr/local/lib/python3.11/dist-packages (from torch) (3.1.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch) (1.3.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch) (3.0.2)\n","Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m27.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m35.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m34.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m10.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m71.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127\n"]}],"source":["!pip install torch"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7760,"status":"ok","timestamp":1740647755347,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"},"user_tz":-180},"id":"khmSabQPxdz2","outputId":"ce063c26-674a-4198-b6c9-5554d7befd6d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting openpyxl==3.1.2\n","  Downloading openpyxl-3.1.2-py2.py3-none-any.whl.metadata (2.5 kB)\n","Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.11/dist-packages (from openpyxl==3.1.2) (2.0.0)\n","Downloading openpyxl-3.1.2-py2.py3-none-any.whl (249 kB)\n","\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/250.0 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━\u001b[0m \u001b[32m153.6/250.0 kB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m250.0/250.0 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: openpyxl\n","  Attempting uninstall: openpyxl\n","    Found existing installation: openpyxl 3.1.5\n","    Uninstalling openpyxl-3.1.5:\n","      Successfully uninstalled openpyxl-3.1.5\n","Successfully installed openpyxl-3.1.2\n"]}],"source":["!pip install openpyxl==3.1.2"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6973,"status":"ok","timestamp":1740647762328,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"},"user_tz":-180},"id":"c6ZkVtp4z700","outputId":"f2dc6fec-6b29-44f2-9fa8-379e785a494a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting torch_geometric\n","  Downloading torch_geometric-2.6.1-py3-none-any.whl.metadata (63 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/63.1 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m63.1/63.1 kB\u001b[0m \u001b[31m1.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (3.11.12)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (2024.10.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (3.1.5)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (1.26.4)\n","Requirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (5.9.5)\n","Requirement already satisfied: pyparsing in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (3.2.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (2.32.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from torch_geometric) (4.67.1)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (2.4.6)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (1.3.2)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (25.1.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (0.3.0)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch_geometric) (1.18.3)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch_geometric) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->torch_geometric) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->torch_geometric) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->torch_geometric) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->torch_geometric) (2025.1.31)\n","Downloading torch_geometric-2.6.1-py3-none-any.whl (1.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m19.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: torch_geometric\n","Successfully installed torch_geometric-2.6.1\n"]}],"source":["!pip install  torch_geometric"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6165,"status":"ok","timestamp":1740647768497,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"},"user_tz":-180},"id":"QBLjbtmb1pfR","outputId":"655efacc-d9e8-4152-d23b-4e0ec313abbc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch-geometric in /usr/local/lib/python3.11/dist-packages (2.6.1)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (3.11.12)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (2024.10.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (3.1.5)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (1.26.4)\n","Requirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (5.9.5)\n","Requirement already satisfied: pyparsing in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (3.2.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (2.32.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from torch-geometric) (4.67.1)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (2.4.6)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (1.3.2)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (25.1.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (0.3.0)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp->torch-geometric) (1.18.3)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch-geometric) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->torch-geometric) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->torch-geometric) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->torch-geometric) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->torch-geometric) (2025.1.31)\n"]}],"source":["!pip install torch-geometric --upgrade\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4068,"status":"ok","timestamp":1740647772567,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"},"user_tz":-180},"id":"iS9iTxIn17Pw","outputId":"01f86dd3-0161-4479-95c6-55712e9d07ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.10.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.56.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.8)\n","Requirement already satisfied: numpy>=1.23 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.26.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (11.1.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (3.2.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n"]}],"source":["!pip install  matplotlib"]},{"cell_type":"markdown","metadata":{"id":"A-Zh58Bi6lwd"},"source":["DAta collection and Preprocessing"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"id":"dEtFnVqYV_b7","executionInfo":{"status":"ok","timestamp":1740648393774,"user_tz":-180,"elapsed":11963,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}},"outputId":"27238394-5e3a-48ed-baa0-4ea12aeec44c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-4a1ebfd7-b87a-43f9-8cf6-a18850d3d0f4\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-4a1ebfd7-b87a-43f9-8cf6-a18850d3d0f4\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving divorce.xlsx to divorce (1).xlsx\n"]}],"source":["import torch\n","import torch.nn.functional as F\n","from torch_geometric.nn import GCNConv, GATConv\n","from torch_geometric.data import Data\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.metrics import accuracy_score, f1_score, recall_score, confusion_matrix\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neighbors import NearestNeighbors\n","from sklearn.feature_selection import VarianceThreshold, RFE\n","from sklearn.ensemble import RandomForestClassifier\n","import matplotlib.pyplot as plt\n","\n","\n","# Load dataset\n","\n","from google.colab import files\n","uploaded = files.upload()\n","\n","df = pd.read_excel(\"divorce.xlsx\", engine=\"openpyxl\")\n"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"krXduT7XBZAk","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1740649735102,"user_tz":-180,"elapsed":2666,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}},"outputId":"6252a2a4-051d-4ee4-f64c-0aab004c1be3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 010, Loss: 0.1412, LR: 0.010000\n","  Train Acc: 0.9832, Sensitivity: 0.9661, Specificity: 1.0000, F1: 0.9832\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 020, Loss: 0.1962, LR: 0.010000\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 030, Loss: 0.1521, LR: 0.005000\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 040, Loss: 0.1139, LR: 0.005000\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 050, Loss: 0.0864, LR: 0.002500\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 060, Loss: 0.1470, LR: 0.002500\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 070, Loss: 0.1123, LR: 0.001250\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 080, Loss: 0.0992, LR: 0.001250\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 090, Loss: 0.0952, LR: 0.000625\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","Epoch 100, Loss: 0.1215, LR: 0.000625\n","  Train Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","  Val   Acc: 1.0000, Sensitivity: 1.0000, Specificity: 1.0000, F1: 1.0000\n","\n","Final Test Metrics:\n","Test Accuracy: 0.9231\n","Test Sensitivity: 0.8462\n","Test Specificity: 1.0000\n","Test F1 Score: 0.9226\n","Test Precision: 0.9333\n","Test Recall: 0.9231\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x1600 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import torch\n","import torch.nn.functional as F\n","from torch_geometric.nn import GCNConv, GATConv\n","from torch_geometric.data import Data\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.metrics import accuracy_score, f1_score, recall_score, confusion_matrix, precision_score\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neighbors import NearestNeighbors\n","from sklearn.feature_selection import VarianceThreshold, RFE\n","from sklearn.ensemble import RandomForestClassifier\n","import matplotlib.pyplot as plt\n","\n","\n","# Define features and target variable\n","features = df.drop('Class', axis=1).columns  # Use all features except the target\n","X = df[features].values\n","y = df['Class'].values  # Assuming \"Class\" is the target column\n","\n","# Feature Selection\n","selector = VarianceThreshold(threshold=(.8 * (1 - .8)))\n","X = selector.fit_transform(X)\n","\n","# Normalize features\n","scaler = StandardScaler()\n","X = scaler.fit_transform(X)\n","\n","# Split dataset into train, validation, and test sets\n","X_train, X_temp, y_train, y_temp = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)\n","X_val, X_test, y_val, y_test = train_test_split(X_temp, y_temp, test_size=0.5, random_state=42, stratify=y_temp)\n","\n","# Convert data to tensors\n","x_train_tensor = torch.tensor(X_train, dtype=torch.float)\n","y_train_tensor = torch.tensor(y_train, dtype=torch.long)\n","x_val_tensor = torch.tensor(X_val, dtype=torch.float)\n","y_val_tensor = torch.tensor(y_val, dtype=torch.long)\n","x_test_tensor = torch.tensor(X_test, dtype=torch.float)\n","y_test_tensor = torch.tensor(y_test, dtype=torch.long)\n","\n","# Create a Sparse Graph using k-NN for Training Data\n","k = 5  # Number of neighbors; adjust as needed\n","nbrs = NearestNeighbors(n_neighbors=k, algorithm='ball_tree').fit(X_train)\n","distances, indices = nbrs.kneighbors(X_train)\n","\n","edge_index_list = []\n","num_nodes = x_train_tensor.size(0)\n","for i in range(num_nodes):\n","    for j in indices[i]:\n","        if i != j:\n","            edge_index_list.append([i, j])\n","edge_index = torch.tensor(edge_index_list, dtype=torch.long).t().contiguous()\n","\n","train_data = Data(x=x_train_tensor, edge_index=edge_index, y=y_train_tensor)\n","\n","# Define the GNN Model (GCN)\n","class GNNModel(torch.nn.Module):\n","    def __init__(self, in_channels, hidden_channels, out_channels, model_type='GCN', heads=4,  dropout_rate=0.5):\n","        super(GNNModel, self).__init__()\n","        if model_type == 'GCN':\n","            self.conv1 = GCNConv(in_channels, hidden_channels)\n","            self.conv2 = GCNConv(hidden_channels, out_channels)\n","        elif model_type == 'GAT':\n","            self.conv1 = GATConv(in_channels, hidden_channels, heads=heads, dropout=dropout_rate)\n","            self.conv2 = GATConv(hidden_channels * heads, out_channels, heads=1, concat=False, dropout=dropout_rate)\n","        else:\n","            raise ValueError(\"Invalid model type. Choose 'GCN' or 'GAT'.\")\n","        self.dropout_rate = dropout_rate\n","\n","    def forward(self, data):\n","        x, edge_index = data.x, data.edge_index\n","        x = self.conv1(x, edge_index)\n","        x = F.relu(x)\n","        x = F.dropout(x, p=self.dropout_rate, training=self.training)  # Apply dropout here\n","        x = self.conv2(x, edge_index)\n","        return F.log_softmax(x, dim=1)\n","\n","# Hyperparameter Tuning (Example with Grid Search)\n","param_grid = {\n","    'lr': [0.01, 0.005],\n","    'hidden_channels': [16, 32],\n","    'model_type': ['GCN', 'GAT']\n","}\n","\n","best_params = {'lr': 0.01, 'hidden_channels': 32, 'model_type': 'GAT'}  # Example best params\n","\n","\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","\n","# Initialize the model with best parameters\n","model = GNNModel(in_channels=X_train.shape[1], hidden_channels=best_params['hidden_channels'],\n","                 out_channels=2, model_type=best_params['model_type']).to(device)\n","\n","train_data = train_data.to(device)\n","\n","# Training Setup\n","optimizer = torch.optim.Adam(model.parameters(), lr=best_params['lr'], weight_decay=5e-4)\n","scheduler = torch.optim.lr_scheduler.StepLR(optimizer, step_size=20, gamma=0.5)\n","criterion = torch.nn.CrossEntropyLoss()\n","\n","def train():\n","    model.train()\n","    optimizer.zero_grad()\n","    out = model(train_data)\n","    loss = criterion(out, train_data.y)\n","    loss.backward()\n","    optimizer.step()\n","    return loss.item()\n","\n","# Evaluation Functions\n","def build_knn_graph(x_tensor, k=5):\n","    x_np = x_tensor.cpu().numpy()\n","    nbrs = NearestNeighbors(n_neighbors=k, algorithm='ball_tree').fit(x_np)\n","    distances, indices = nbrs.kneighbors(x_np)\n","    edge_index_list = []\n","    num_nodes = x_tensor.size(0)\n","    for i in range(num_nodes):\n","        for j in indices[i]:\n","            if i != j:\n","                edge_index_list.append([i, j])\n","    edge_index = torch.tensor(edge_index_list, dtype=torch.long).t().contiguous()\n","    return edge_index\n","\n","def evaluate(x_tensor, y_true_tensor, k=5):\n","    edge_index_eval = build_knn_graph(x_tensor, k=k)\n","    data_eval = Data(x=x_tensor, edge_index=edge_index_eval)\n","    data_eval = data_eval.to(device)\n","    model.eval()\n","    with torch.no_grad():\n","        out = model(data_eval)\n","        preds = out.argmax(dim=1).cpu().numpy()\n","        y_true = y_true_tensor.cpu().numpy()\n","    return preds, y_true\n","\n","# Train the Model and Collect Metrics\n","epochs = 100\n","train_acc_list = []\n","val_acc_list = []\n","train_sensitivity_list = []\n","val_sensitivity_list = []\n","train_specificity_list = []\n","val_specificity_list = []\n","loss_list = []\n","lr_list = []\n","epoch_list = []\n","\n","best_val_loss = float('inf')\n","patience = 10  # Number of epochs to wait before stopping\n","epochs_without_improvement = 0\n","\n","for epoch in range(epochs):\n","    loss = train()\n","    loss_list.append(loss)\n","    lr_list.append(optimizer.param_groups[0]['lr'])\n","    scheduler.step()\n","\n","    if (epoch + 1) % 10 == 0:\n","        train_preds, train_true = evaluate(x_train_tensor, y_train_tensor, k=k)\n","        val_preds, val_true = evaluate(x_val_tensor, y_val_tensor, k=k)\n","\n","        train_acc = accuracy_score(train_true, train_preds)\n","        val_acc = accuracy_score(val_true, val_preds)\n","\n","        train_sensitivity = recall_score(train_true, train_preds, pos_label=1)\n","        val_sensitivity = recall_score(val_true, val_preds, pos_label=1)\n","\n","        train_specificity = recall_score(train_true, train_preds, pos_label=0)\n","        val_specificity = recall_score(val_true, val_preds, pos_label=0)\n","\n","        train_acc_list.append(train_acc)\n","        val_acc_list.append(val_acc)\n","        train_sensitivity_list.append(train_sensitivity)\n","        val_sensitivity_list.append(val_sensitivity)\n","        train_specificity_list.append(train_specificity)\n","        val_specificity_list.append(val_specificity)\n","        epoch_list.append(epoch + 1)\n","\n","        # Calculate validation loss using val_preds and val_true\n","        # Inside the training loop where metrics are calculated\n","\n","        train_f1 = f1_score(train_true, train_preds, average='weighted')\n","        val_f1 = f1_score(val_true, val_preds, average='weighted')\n","        val_loss = criterion(model(val_data), val_data.y).item()\n","        print(f\"Epoch {epoch+1:03d}, Loss: {loss:.4f}, LR: {lr_list[-1]:.6f}\")\n","        print(f\"  Train Acc: {train_acc:.4f}, Sensitivity: {train_sensitivity:.4f}, Specificity: {train_specificity:.4f}, F1: {train_f1:.4f}\")\n","        print(f\"  Val   Acc: {val_acc:.4f}, Sensitivity: {val_sensitivity:.4f}, Specificity: {val_specificity:.4f}, F1: {val_f1:.4f}\")\n","\n","         # Early Stopping Check\n","        if val_loss < best_val_loss:\n","            best_val_loss = val_loss\n","            epochs_without_improvement = 0\n","        else:\n","            epochs_without_improvement += 1\n","\n","        if epochs_without_improvement >= patience:\n","            print(f\"Early stopping triggered at epoch {epoch + 1}!\")\n","            break\n","\n","# Final Evaluation on Test Data\n","test_preds, test_true = evaluate(x_test_tensor, y_test_tensor, k=k)\n","test_acc = accuracy_score(test_true, test_preds)\n","test_sensitivity = recall_score(test_true, test_preds, pos_label=1)\n","test_specificity = recall_score(test_true, test_preds, pos_label=0)\n","test_f1 = f1_score(test_true, test_preds, average='weighted')\n","test_precision = precision_score(test_true, test_preds, average='weighted')\n","test_recall = recall_score(test_true, test_preds, average='weighted')\n","\n","print(\"\\nFinal Test Metrics:\")\n","print(f\"Test Accuracy: {test_acc:.4f}\")\n","print(f\"Test Sensitivity: {test_sensitivity:.4f}\")\n","print(f\"Test Specificity: {test_specificity:.4f}\")\n","print(f\"Test F1 Score: {test_f1:.4f}\")\n","print(f\"Test Precision: {test_precision:.4f}\")\n","print(f\"Test Recall: {test_recall:.4f}\")\n","\n","\n","\n","# Plot the Results\n","import matplotlib.pyplot as plt\n","\n","# Define the number of subplots\n","fig, axes = plt.subplots(4, 1, figsize=(8, 16))  # 4 rows, 1 column of subplots\n","\n","# Plot 1: Accuracy (Train and Validation)\n","axes[0].set_title('Accuracy over Epochs')\n","axes[0].set_xlabel('Epoch')\n","axes[0].set_ylabel('Accuracy')\n","axes[0].plot(epoch_list, train_acc_list, marker='o', label='Train Accuracy', color='tab:blue')\n","axes[0].plot(epoch_list, val_acc_list, marker='s', label='Validation Accuracy', color='tab:cyan')\n","axes[0].legend(loc='upper left')\n","axes[0].grid(True)\n","\n","# Plot 2: Sensitivity (Train and Validation)\n","axes[1].set_title('Sensitivity over Epochs')\n","axes[1].set_xlabel('Epoch')\n","axes[1].set_ylabel('Sensitivity')\n","axes[1].plot(epoch_list, train_sensitivity_list, marker='o', label='Train Sensitivity', color='tab:orange', linestyle='--')\n","axes[1].plot(epoch_list, val_sensitivity_list, marker='s', label='Validation Sensitivity', color='tab:red', linestyle='--')\n","axes[1].legend(loc='upper left')\n","axes[1].grid(True)\n","\n","# Plot 3: Specificity (Train and Validation)\n","axes[2].set_title('Specificity over Epochs')\n","axes[2].set_xlabel('Epoch')\n","axes[2].set_ylabel('Specificity')\n","axes[2].plot(epoch_list, train_specificity_list, marker='o', label='Train Specificity', color='tab:green', linestyle='--')\n","axes[2].plot(epoch_list, val_specificity_list, marker='s', label='Validation Specificity', color='tab:purple', linestyle='--')\n","axes[2].legend(loc='upper left')\n","axes[2].grid(True)\n","\n","# Plot 4: Loss (Training Loss)\n","axes[3].set_title('Training Loss over Epochs')\n","axes[3].set_xlabel('Epoch')\n","axes[3].set_ylabel('Loss')\n","axes[3].plot(range(1, epochs+1), loss_list, label='Training Loss', color='tab:red', alpha=0.6)\n","axes[3].legend(loc='upper right')\n","axes[3].grid(True)\n","\n","# Adjust layout to prevent overlap\n","plt.tight_layout(pad=2.0)\n","\n","# Add a global title\n","fig.suptitle('Individual Metrics and Training Loss over Epochs', fontsize=16)\n","\n","# Show the plots\n","plt.show()\n","\n","# Plot Learning Rate\n","plt.figure(figsize=(8, 4))\n","plt.plot(range(1, epochs+1), lr_list, marker='o', label='Learning Rate')\n","plt.xlabel('Epoch')\n","plt.ylabel('Learning Rate')\n","plt.title('Learning Rate over Epochs')\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n","\n","\n","# Plot Confusion Matrix\n","cm = confusion_matrix(test_true, test_preds)\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=[\"Class 0\", \"Class 1\"])\n","plt.figure(figsize=(8, 6))\n","disp.plot(cmap=plt.cm.Blues, values_format='d')\n","plt.title(\"Confusion Matrix\")\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DtsL-RDHKEe5","executionInfo":{"status":"aborted","timestamp":1740647819000,"user_tz":-180,"elapsed":1494373,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}}},"outputs":[],"source":["import pandas as pd\n","import torch\n","from torch_geometric.data import Data\n","from sklearn.preprocessing import StandardScaler\n","\n","# ... (Your existing code for data loading, preprocessing, and model definition) ...\n","\n","# Assuming 'df' is your original Pandas DataFrame\n","feature_names = df.drop('Class', axis=1).columns  # Get feature names\n","\n","# Sample input data\n","input_data = (2, 2, 4, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 2, 0, 1, 2, 1, 3, 3, 2, 1, 1, 2, 3, 2, 1, 3, 3, 3, 2, 3, 2, 1)\n","\n","# Convert input data to a DataFrame with feature names\n","input_data_df = pd.DataFrame([input_data], columns=feature_names)\n","\n","# 1. Preprocess the input data\n","input_data_np = input_data_df.values  # Convert to NumPy array\n","input_data_tensor = torch.tensor(input_data_np, dtype=torch.float).to(device) # Convert to PyTorch tensor and move to device\n","\n","# 2. Create a Data object with your input features\n","# You need to provide edge_index here, consider using a k-NN graph for this single data point.\n","# Replace `dummy_edge_index` with your k-NN graph logic.\n","dummy_edge_index = torch.tensor([[0, 0]], dtype=torch.long).t().contiguous().to(device)\n","input_data_graph = Data(x=input_data_tensor, edge_index=dummy_edge_index).to(device)\n","\n","# 3. Make prediction using your model\n","model.eval()  # Set the model to evaluation mode\n","with torch.no_grad():\n","    prediction = model(input_data_graph).argmax(dim=1).item()\n","\n","print(\"Prediction:\", prediction)\n","\n","if (prediction == 0):\n","    print('The couple is Not divorced')\n","else:\n","    print('The couple is Divorced')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YorE4KXZJOJY","executionInfo":{"status":"aborted","timestamp":1740647819008,"user_tz":-180,"elapsed":1494377,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}}},"outputs":[],"source":["import pandas as pd\n","import torch\n","from torch_geometric.data import Data\n","from sklearn.preprocessing import StandardScaler\n","\n","# ... (Your existing code for data loading, preprocessing, and model definition) ...\n","\n","# Assuming 'df' is your original Pandas DataFrame\n","feature_names = df.drop('Class', axis=1).columns  # Get feature names\n","\n","# Sample input data\n","input_data = (2, 2, 4, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 2, 0, 1, 2, 1, 3, 3, 2, 1, 1, 2, 3, 2, 1, 3, 3, 3, 2, 3, 2, 1)\n","\n","# Convert input data to a DataFrame with feature names\n","input_data_df = pd.DataFrame([input_data], columns=feature_names)\n","\n","# 1. Preprocess the input data\n","input_data_np = input_data_df.values  # Convert to NumPy array\n","input_data_tensor = torch.tensor(input_data_np, dtype=torch.float).to(device)\n","\n","# 2. Create a Data object with your input features\n","dummy_edge_index = torch.tensor([[0, 0]], dtype=torch.long).t().contiguous().to(device)\n","input_data_graph = Data(x=input_data_tensor, edge_index=dummy_edge_index).to(device)\n","\n","# 3. Make prediction using your model\n","model.eval()  # Set the model to evaluation mode\n","with torch.no_grad():\n","    prediction = model(input_data_graph).argmax(dim=1).item()\n","\n","print(\"Prediction:\", prediction)\n","\n","if (prediction == 0):\n","    print('The couple is Not divorced')\n","else:\n","    print('The couple is Divorced')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"50oQMpSjfxwP","executionInfo":{"status":"aborted","timestamp":1740647819014,"user_tz":-180,"elapsed":1494379,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}}},"outputs":[],"source":["torch.save(model.state_dict(), 'divorce_gnn_model.pth')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"glhWfmdzgALW","executionInfo":{"status":"aborted","timestamp":1740647819018,"user_tz":-180,"elapsed":1494380,"user":{"displayName":"Bliss Alexus","userId":"04730089289744520428"}}},"outputs":[],"source":["import torch\n","from torch_geometric.data import Data\n","from sklearn.preprocessing import StandardScaler\n","\n","def divorce_prediction(input_data, model_path='divorce_gnn_model.pth'):  # Provide path to the saved model\n","    feature_names = df.drop('Class', axis=1).columns  # Get feature names\n","    # ... (Your preprocessing steps) ...\n","\n","    # Load the saved model\n","    model = GNNModel(in_channels=X_train.shape[1], hidden_channels=best_params['hidden_channels'],\n","                    out_channels=2, model_type=best_params['model_type']).to(device)\n","    model.load_state_dict(torch.load(model_path, map_location=device)) # Make sure it's on the correct device\n","    model.eval()  # Set model to evaluation mode\n","\n","    # ... (Rest of your prediction logic) ..."]},{"cell_type":"markdown","metadata":{"id":"9G47XGBf6kOP"},"source":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}