{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10834550,"sourceType":"datasetVersion","datasetId":6728176}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/random-forest-model-34fdf940-1717-4d75-b85c-6e9e23226247.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250226/auto/storage/goog4_request&X-Goog-Date=20250226T145401Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=ae47390d8bd3f663a5f567b3d25682b8775e4aa2865c93bb87e544e9677a2e0d90d8ed7d41bdc7575756b6c8445aac25f7766091ed7e58625018478d3be3e3544b3d019b9e0d3f110a6eb75e595daa77f6057e295f1baf3b1e1d303f7df5256d8b74282057ed24e6888bdf74a7783cc92474c00b2016b89140f469a1d259d637c2cafd6e31dc13c16915b2d08ba87fcf85e21d1a8f4ba100a0ebd5111b1ae49fa6ba1c9fd70349c38a324625a7a15f1f12dc2e2ad1fa86c36ae7db86fffdbe56af6005d5590b2a3da9473f6f5451410e9e5d497641c2a68da0f2d8b184c38daba668e3ea51e9c6cddc6b2c8ae162247f3cf3d7cd74dfdd5a9d5d9adce5b22192","timestamp":1740581831022}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import cross_val_score\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score, confusion_matrix\n","from sklearn.metrics import accuracy_score\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:28.000683Z","iopub.execute_input":"2025-02-24T12:47:28.001168Z","iopub.status.idle":"2025-02-24T12:47:29.280997Z","shell.execute_reply.started":"2025-02-24T12:47:28.001139Z","shell.execute_reply":"2025-02-24T12:47:29.279829Z"},"id":"8aOfJSZ3wB1o"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["import os\n","import pandas as pd\n","print(\"Available datasets:\", os.listdir('/kaggle/input/'))\n","\n","dataset_dir = '/kaggle/input/divorcee-dataset'\n","print(\"Files in dataset:\", os.listdir(dataset_dir))\n","\n","\n","# Load your data\n","data_path = \"/kaggle/input/divorcee-dataset/divorce.xlsx\"\n","divorcee_data = pd.read_excel(data_path, engine=\"openpyxl\")\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:29.282786Z","iopub.execute_input":"2025-02-24T12:47:29.283339Z","iopub.status.idle":"2025-02-24T12:47:30.098856Z","shell.execute_reply.started":"2025-02-24T12:47:29.283307Z","shell.execute_reply":"2025-02-24T12:47:30.097657Z"},"id":"MbZaD_0uwB1p","outputId":"610f1c48-61ee-43f7-bccb-167f9e088ace"},"outputs":[{"name":"stdout","text":"Available datasets: ['divorcee-dataset']\nFiles in dataset: ['divorce.xlsx']\n","output_type":"stream"}],"execution_count":null},{"cell_type":"markdown","source":["## Splitting the features and target"],"metadata":{"id":"fhzOpxp-wB1p"}},{"cell_type":"code","source":["# Separate features (X) and target variable (Y)\n","X = divorcee_data.drop(columns=\"Class\", axis=1)\n","Y = divorcee_data[\"Class\"]\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.100337Z","iopub.execute_input":"2025-02-24T12:47:30.100757Z","iopub.status.idle":"2025-02-24T12:47:30.116357Z","shell.execute_reply.started":"2025-02-24T12:47:30.100729Z","shell.execute_reply":"2025-02-24T12:47:30.114869Z"},"id":"IVU60bGbwB1r"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["print(X)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.117496Z","iopub.execute_input":"2025-02-24T12:47:30.117851Z","iopub.status.idle":"2025-02-24T12:47:30.157852Z","shell.execute_reply.started":"2025-02-24T12:47:30.117785Z","shell.execute_reply":"2025-02-24T12:47:30.156821Z"},"id":"MMyUyD5swB1s","outputId":"eec1a0fd-738b-4f35-8703-aaa6063442df"},"outputs":[{"name":"stdout","text":"     Atr1  Atr2  Atr3  Atr4  Atr5  Atr6  Atr7  Atr8  Atr9  Atr10  ...  Atr45  \\\n0       2     2     4     1     0     0     0     0     0      0  ...      3   \n1       4     4     4     4     4     0     0     4     4      4  ...      2   \n2       2     2     2     2     1     3     2     1     1      2  ...      2   \n3       3     2     3     2     3     3     3     3     3      3  ...      3   \n4       2     2     1     1     1     1     0     0     0      0  ...      2   \n..    ...   ...   ...   ...   ...   ...   ...   ...   ...    ...  ...    ...   \n165     0     0     0     0     0     0     0     0     0      0  ...      0   \n166     0     0     0     0     0     0     0     0     0      0  ...      3   \n167     1     1     0     0     0     0     0     0     0      1  ...      2   \n168     0     0     0     0     0     0     0     0     0      0  ...      4   \n169     0     0     0     0     0     0     0     1     0      0  ...      1   \n\n     Atr46  Atr47  Atr48  Atr49  Atr50  Atr51  Atr52  Atr53  Atr54  \n0        2      1      3      3      3      2      3      2      1  \n1        2      2      3      4      4      4      4      2      2  \n2        3      2      3      1      1      1      2      2      2  \n3        2      2      3      3      3      3      2      2      2  \n4        2      1      2      3      2      2      2      1      0  \n..     ...    ...    ...    ...    ...    ...    ...    ...    ...  \n165      1      0      4      1      1      4      2      2      2  \n166      4      1      2      2      2      2      3      2      2  \n167      3      0      2      0      1      1      3      0      0  \n168      3      3      2      2      3      2      4      3      1  \n169      3      4      4      0      1      3      3      3      1  \n\n[170 rows x 54 columns]\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["print(Y)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.159187Z","iopub.execute_input":"2025-02-24T12:47:30.159584Z","iopub.status.idle":"2025-02-24T12:47:30.168298Z","shell.execute_reply.started":"2025-02-24T12:47:30.159544Z","shell.execute_reply":"2025-02-24T12:47:30.166964Z"},"id":"4GMsfVJCwB1t","outputId":"c20882af-b88f-4aac-b1c8-78799d8451f8"},"outputs":[{"name":"stdout","text":"0      1\n1      1\n2      1\n3      1\n4      1\n      ..\n165    0\n166    0\n167    0\n168    0\n169    0\nName: Class, Length: 170, dtype: int64\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["# Standerdize data for better performabce\n","from sklearn.preprocessing import StandardScaler\n","\n","# Scale the features\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.169421Z","iopub.execute_input":"2025-02-24T12:47:30.169866Z","iopub.status.idle":"2025-02-24T12:47:30.208955Z","shell.execute_reply.started":"2025-02-24T12:47:30.169826Z","shell.execute_reply":"2025-02-24T12:47:30.207755Z"},"id":"JCIYaXOkwB1t"},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":["## Split data into training and testing data"],"metadata":{"id":"zxZjs9YOwB1u"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify = Y, random_state=2)\n","\n","# Check for duplicates between training and test sets\n","train_test_overlap = set(X_train.index).intersection(set(X_test.index))\n","print(\"Overlap between training and test sets:\", train_test_overlap)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:55:46.195778Z","iopub.execute_input":"2025-02-24T12:55:46.196322Z","iopub.status.idle":"2025-02-24T12:55:46.208536Z","shell.execute_reply.started":"2025-02-24T12:55:46.196262Z","shell.execute_reply":"2025-02-24T12:55:46.207193Z"},"id":"TRT1vapMwB1v","outputId":"5e040a11-690d-4b06-f9c2-90d2d48ce71e"},"outputs":[{"name":"stdout","text":"Overlap between training and test sets: set()\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["print(X.shape, X_train.shape, X_test.shape)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.224558Z","iopub.execute_input":"2025-02-24T12:47:30.225006Z","iopub.status.idle":"2025-02-24T12:47:30.242129Z","shell.execute_reply.started":"2025-02-24T12:47:30.224963Z","shell.execute_reply":"2025-02-24T12:47:30.240941Z"},"id":"TQsL6Ey_wB1v","outputId":"d9731579-369c-4d52-db27-36eeb32267bf"},"outputs":[{"name":"stdout","text":"(170, 54) (136, 54) (34, 54)\n","output_type":"stream"}],"execution_count":null},{"cell_type":"markdown","source":["## MODEL TRAINING"],"metadata":{"id":"iuXQu09VwB1w"}},{"cell_type":"markdown","source":["### RANDOM fOREST"],"metadata":{"id":"gKK1mOokwB1x"}},{"cell_type":"code","source":["# Initialize the Random Forest model\n","rf_model = RandomForestClassifier(n_estimators=100, random_state=42)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.243893Z","iopub.execute_input":"2025-02-24T12:47:30.244197Z","iopub.status.idle":"2025-02-24T12:47:30.260557Z","shell.execute_reply.started":"2025-02-24T12:47:30.24417Z","shell.execute_reply":"2025-02-24T12:47:30.259301Z"},"id":"01_2eED9wB1x"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# Train the model on the full training set\n","rf_model.fit(X_train, Y_train)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:30.261752Z","iopub.execute_input":"2025-02-24T12:47:30.262196Z","iopub.status.idle":"2025-02-24T12:47:30.448107Z","shell.execute_reply.started":"2025-02-24T12:47:30.262154Z","shell.execute_reply":"2025-02-24T12:47:30.446917Z"},"id":"fQrh6PhGwB1x","outputId":"eaf6b478-bc22-4efe-d714-63328dc7e7dd"},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier(random_state=42)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":null},{"cell_type":"code","source":["# Perform 5-fold cross-validation\n","cv_scores = cross_val_score(rf_model, X, Y, cv=5, scoring='accuracy')\n","print(\"Cross-Validation Scores:\", cv_scores)\n","print(\"Mean CV Accuracy:\", cv_scores.mean())"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:53.879143Z","iopub.execute_input":"2025-02-24T12:47:53.879517Z","iopub.status.idle":"2025-02-24T12:47:54.674246Z","shell.execute_reply.started":"2025-02-24T12:47:53.879489Z","shell.execute_reply":"2025-02-24T12:47:54.673117Z"},"id":"ejXQ6BFBwB1y","outputId":"07ff5b0a-1d55-4844-b3fc-dd84cb39101c"},"outputs":[{"name":"stdout","text":"Cross-Validation Scores: [0.88235294 1.         1.         1.         1.        ]\nMean CV Accuracy: 0.9764705882352942\n","output_type":"stream"}],"execution_count":null},{"cell_type":"markdown","source":["## Model Evaluation"],"metadata":{"id":"F1VhjEJ_wB1z"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","# acuracy on traing data\n","X_train_prediction = rf_model.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction, Y_train)\n","print('Accuracy on Training data : ', training_data_accuracy)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:48:14.475285Z","iopub.execute_input":"2025-02-24T12:48:14.475666Z","iopub.status.idle":"2025-02-24T12:48:14.496609Z","shell.execute_reply.started":"2025-02-24T12:48:14.475636Z","shell.execute_reply":"2025-02-24T12:48:14.49557Z"},"id":"pwvnQDD1wB1z","outputId":"09c92d88-a6f9-4d9a-ce50-50d3edce6b19"},"outputs":[{"name":"stdout","text":"Accuracy on Training data :  1.0\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["\n","# acuracy on test data\n","X_test_prediction = rf_model.predict(X_test)\n","test_data_accuracy = accuracy_score(X_test_prediction, Y_test)\n","print('Accuracy on Test data : ', test_data_accuracy)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:48:18.73353Z","iopub.execute_input":"2025-02-24T12:48:18.733915Z","iopub.status.idle":"2025-02-24T12:48:18.754648Z","shell.execute_reply.started":"2025-02-24T12:48:18.733887Z","shell.execute_reply":"2025-02-24T12:48:18.753514Z"},"id":"b1sPXjEDwB1z","outputId":"307672f0-e5d2-442f-b13b-81922ea4e48f"},"outputs":[{"name":"stdout","text":"Accuracy on Test data :  1.0\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["# Make predictions on the test set\n","y_test_pred = rf_model.predict(X_test)\n","\n","# Evaluate the model\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report\n","\n","accuracy = accuracy_score(Y_test, y_test_pred)\n","precision = precision_score(Y_test, y_test_pred)\n","recall = recall_score(Y_test, y_test_pred)\n","f1 = f1_score(Y_test, y_test_pred)\n","conf_matrix = confusion_matrix(Y_test, y_test_pred)\n","class_report = classification_report(Y_test, y_test_pred)\n","\n","# Print evaluation metrics\n","print(\"Accuracy:\", accuracy)\n","print(\"Precision:\", precision)\n","print(\"Recall (Sensitivity):\", recall)\n","print(\"F1-Score:\", f1)\n","print(\"Confusion Matrix:\\n\", conf_matrix)\n","print(\"Classification Report:\\n\", class_report)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.336432Z","iopub.execute_input":"2025-02-24T12:47:31.33687Z","iopub.status.idle":"2025-02-24T12:47:31.386659Z","shell.execute_reply.started":"2025-02-24T12:47:31.336825Z","shell.execute_reply":"2025-02-24T12:47:31.385643Z"},"id":"LzUJF7VNwB10","outputId":"b01e268e-38c2-49a9-a429-45c2c962551e"},"outputs":[{"name":"stdout","text":"Accuracy: 1.0\nPrecision: 1.0\nRecall (Sensitivity): 1.0\nF1-Score: 1.0\nConfusion Matrix:\n [[17  0]\n [ 0 17]]\nClassification Report:\n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        17\n           1       1.00      1.00      1.00        17\n\n    accuracy                           1.00        34\n   macro avg       1.00      1.00      1.00        34\nweighted avg       1.00      1.00      1.00        34\n\n","output_type":"stream"}],"execution_count":null},{"cell_type":"markdown","source":["### SAVE MODEL"],"metadata":{"id":"uiQKrjBzwB11"}},{"cell_type":"code","source":["import joblib\n","\n","# Save the trained model to a file\n","model_filename = 'random_forest_model.pkl'\n","joblib.dump(rf_model, model_filename)\n","print(f\"Model saved to {model_filename}\")"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.387839Z","iopub.execute_input":"2025-02-24T12:47:31.388182Z","iopub.status.idle":"2025-02-24T12:47:31.556699Z","shell.execute_reply.started":"2025-02-24T12:47:31.388155Z","shell.execute_reply":"2025-02-24T12:47:31.555427Z"},"id":"zUC3oFnmwB11","outputId":"ad7fe705-5b7c-4efe-d24b-298919415784"},"outputs":[{"name":"stdout","text":"Model saved to random_forest_model.pkl\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["import joblib\n","\n","# Load the saved model\n","model_filename = 'random_forest_model.pkl'\n","rf_model = joblib.load(model_filename)\n","print(\"Model loaded successfully!\")"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.558122Z","iopub.execute_input":"2025-02-24T12:47:31.558448Z","iopub.status.idle":"2025-02-24T12:47:31.616334Z","shell.execute_reply.started":"2025-02-24T12:47:31.558417Z","shell.execute_reply":"2025-02-24T12:47:31.614828Z"},"id":"J-wDtzlpwB12","outputId":"c420da89-9f5d-4608-f3ff-b3ca31444ad4"},"outputs":[{"name":"stdout","text":"Model loaded successfully!\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","\n","def predict_divorce(input_data, model, scaler):\n","    \"\"\"\n","    Predicts whether a divorce will occur based on input data.\n","\n","    Parameters:\n","    - input_data: A list or array of feature values (54 features).\n","    - model: The trained Random Forest model.\n","    - scaler: The scaler used during training.\n","\n","    Returns:\n","    - prediction: 0 (No Divorce) or 1 (Divorce).\n","    \"\"\"\n","    # Convert input data to a DataFrame\n","    input_df = pd.DataFrame([input_data], columns=X.columns)\n","\n","    # Scale the input data using the same scaler used during training\n","    input_scaled = scaler.transform(input_df)\n","\n","    # Make a prediction\n","    prediction = model.predict(input_scaled)\n","    return prediction[0]  # Return the first (and only) prediction"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.617559Z","iopub.execute_input":"2025-02-24T12:47:31.617998Z","iopub.status.idle":"2025-02-24T12:47:31.626343Z","shell.execute_reply.started":"2025-02-24T12:47:31.617947Z","shell.execute_reply":"2025-02-24T12:47:31.624707Z"},"id":"HNclPLWTwB12"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Sample input data\n","input_data = (2, 2, 4, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 2, 0, 1, 2, 1, 3, 3, 2, 1, 1, 2, 3, 2, 1, 3, 3, 3, 2, 3, 2, 1)\n","\n","# Convert input data to a DataFrame with feature names\n","input_data_df = pd.DataFrame([input_data], columns=X_train.columns)\n","\n","# Make prediction using DataFrame (which includes feature names)\n","prediction = rf_model.predict(input_data_df)\n","\n","print(\"Prediction:\", prediction)\n","\n","\n","if (prediction[0] == 0):\n","    print('The couple is Not divorced')\n","else:\n","    print('The couple is Divorced')"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.627525Z","iopub.execute_input":"2025-02-24T12:47:31.627917Z","iopub.status.idle":"2025-02-24T12:47:31.668042Z","shell.execute_reply.started":"2025-02-24T12:47:31.627878Z","shell.execute_reply":"2025-02-24T12:47:31.666773Z"},"id":"2SfeU5fOwB12","outputId":"169c544a-1442-4ed4-cd9a-9759913ccf1c"},"outputs":[{"name":"stdout","text":"Prediction: [1]\nThe couple is Divorced\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Sample input data\n","input_data = (0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,4,1,2,1,1,0,4,3,3,2,2,3,2,4,3,1)\n","\n","# Convert input data to a DataFrame with feature names\n","input_data_df = pd.DataFrame([input_data], columns=X_train.columns)\n","\n","# Make prediction using DataFrame (which includes feature names)\n","prediction = rf_model.predict(input_data_df)\n","\n","print(\"Prediction:\", prediction)\n","\n","if (prediction[0] == 0):\n","    print('The couple is Not divorced')\n","else:\n","    print('The couple is Divorced')"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.669218Z","iopub.execute_input":"2025-02-24T12:47:31.669626Z","iopub.status.idle":"2025-02-24T12:47:31.696325Z","shell.execute_reply.started":"2025-02-24T12:47:31.669581Z","shell.execute_reply":"2025-02-24T12:47:31.694903Z"},"id":"UY2pCpDzwB13","outputId":"fb643116-a4cb-4653-e344-46572f95b6d7"},"outputs":[{"name":"stdout","text":"Prediction: [0]\nThe couple is Not divorced\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":["import os\n","print(os.getcwd())"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-24T12:47:31.697461Z","iopub.execute_input":"2025-02-24T12:47:31.697856Z","iopub.status.idle":"2025-02-24T12:47:31.721671Z","shell.execute_reply.started":"2025-02-24T12:47:31.697809Z","shell.execute_reply":"2025-02-24T12:47:31.720282Z"},"id":"4aiNVZGZwB13","outputId":"3847c39d-a6ec-4a4d-f124-37ca9d84acb3"},"outputs":[{"name":"stdout","text":"/kaggle/working\n","output_type":"stream"}],"execution_count":null}]}